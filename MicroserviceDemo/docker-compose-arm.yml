version: '3.7'

services:
  
  auth-server:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-authserver-host'
    build:
      context: .
      dockerfile: applications/AuthServer.Host/Dockerfile
    volumes:
      - auth-server-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - Redis__Configuration=redis
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__Connections__Default__Port=5672
    ports:
      - 51511:443

  backend-admin-app:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-backendadminapp-host'
    build:
      context: .
      dockerfile: applications/BackendAdminApp.Host/Dockerfile
    volumes:
      - backend-admin-app-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    depends_on:
      - backend-admin-app-gateway
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      # Dynamic C# API Clients 的配置
      # backend-admin-app-gateway 
      - RemoteServices__Default__BaseUrl=https://seoul-arm.zhangjin.tk:51531
      - Redis__Configuration=redis
    ports:
      - 51512:443
  
  public-website:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-publicwebsite-host'
    build:
      context: .
      dockerfile: applications/PublicWebSite.Host/Dockerfile
    volumes:
      - public-website-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    depends_on:
      - public-website-gateway
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      # 没有密码，则设置为空，不能写成 ""
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      # 页面跳转的 URL，不能配置成内网模式 http://auth-server:51511
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      # Dynamic C# API Clients 的配置
      # public-website-gateway
      # https://docs.abp.io/en/abp/latest/API/Dynamic-CSharp-API-Clients
      - RemoteServices__Default__BaseUrl=https://seoul-arm.zhangjin.tk:51532
      - Redis__Configuration=redis
    ports:
      - 51513:443

  identity-service:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-identityservice-host'
    build:
      context: .
      dockerfile: microservices/IdentityService.Host/Dockerfile      
    volumes:
      - identity-service-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - Redis__Configuration=redis
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__Connections__Default__Port=5672
    ports:
      - 51522:443

  tenant-management-service:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-tenantmanagementservice-host'
    build:
      context: .
      dockerfile: microservices/TenantManagementService.Host/Dockerfile
    volumes:
      - tenant-management-service-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - Redis__Configuration=redis
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__Connections__Default__Port=5672
    ports:
      - 51524:443

  blogging-service:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-bloggingservice-host'
    build:
      context: .
      dockerfile: microservices/BloggingService.Host/Dockerfile
    volumes:
      - blogging-service-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - ConnectionStrings__Blogging=mongodb://admin:kkking@mongo:27017/MsDemo_Blogging?authSource=admin
      - Redis__Configuration=redis
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__Connections__Default__Port=5672
      # Dynamic C# API Clients 的配置
      # internal-gateway
      - RemoteServices__Default__BaseUrl=https://seoul-arm.zhangjin.tk:51324
      # Dynamic C# API Clients 的授权信息配置
      - IdentityClients__Authority=https://seoul-arm.zhangjin.tk:51511
      - IdentityClients__RequireHttpsMetadata=true
    ports:
      - 51521:443

  product-service:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-productservice-host'
    build:
      context: .
      dockerfile: microservices/ProductService.Host/Dockerfile
    volumes:
      - product-service-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - ConnectionStrings__ProductManagement=Server=mariadb;Port=3306;Database=ABPDemo_ProductManagement;Uid=boot;Pwd=boot;
      - Redis__Configuration=redis
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__Connections__Default__Port=5672
    ports:
      - 51523:443

  internal-gateway:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-internalgateway-host'
    build:
      context: .
      dockerfile: gateways/InternalGateway.Host/Dockerfile
    volumes:
      - internal-gateway-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    depends_on:
      - identity-service
      - product-service
      - blogging-service
      - tenant-management-service
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - Redis__Configuration=redis
      - Routes__0__DownstreamHostAndPorts__0__Host=identity-service
      - Routes__0__DownstreamHostAndPorts__0__Port=80
      - Routes__0__DownstreamScheme=http
      - Routes__1__DownstreamHostAndPorts__0__Host=tenant-management-service
      - Routes__1__DownstreamHostAndPorts__0__Port=80
      - Routes__1__DownstreamScheme=http
      - Routes__2__DownstreamHostAndPorts__0__Host=product-service
      - Routes__2__DownstreamHostAndPorts__0__Port=80
      - Routes__2__DownstreamScheme=http
      - Routes__3__DownstreamHostAndPorts__0__Host=blogging-service
      - Routes__3__DownstreamHostAndPorts__0__Port=80
      - Routes__3__DownstreamScheme=http
      # BaseUrl - Ocelot 的服务运行地址，要特别注意一下 BaseUrl 是我们外部暴露的 Url
      # 比如我们的 Ocelot 运行在 http://localhost:5000，但是前面有一个 Nginx 绑定了域名 http://api.demo.com
      # 那这里我们的 BaseUrl 就是 http://api.demo.com
      - GlobalConfiguration__BaseUrl=https://seoul-arm.zhangjin.tk:51324
    ports:
      - 51324:443

  backend-admin-app-gateway:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-backendadminappgateway-host'
    build:
      context: .
      dockerfile: gateways/BackendAdminAppGateway.Host/Dockerfile
    volumes:
      - backend-admin-app-gateway-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    depends_on:
      - identity-service
      - product-service
      - tenant-management-service
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - Redis__Configuration=redis
      - Routes__0__DownstreamHostAndPorts__0__Host=identity-service
      - Routes__0__DownstreamHostAndPorts__0__Port=80
      - Routes__0__DownstreamScheme=http
      - Routes__1__DownstreamHostAndPorts__0__Host=tenant-management-service
      - Routes__1__DownstreamHostAndPorts__0__Port=80
      - Routes__1__DownstreamScheme=http
      - Routes__2__DownstreamHostAndPorts__0__Host=product-service
      - Routes__2__DownstreamHostAndPorts__0__Port=80
      - Routes__2__DownstreamScheme=http
      - GlobalConfiguration__BaseUrl=https://seoul-arm.zhangjin.tk:51531
      # Dynamic C# API Clients 的配置
      # Self
      - RemoteServices__Default__BaseUrl=https://seoul-arm.zhangjin.tk:51531
    ports:
      - 51531:443

  public-website-gateway:
    image: 'registry.cn-hangzhou.aliyuncs.com/zhangjj/demo:abp-publicwebsitegateway-host'
    build:
      context: .
      dockerfile: gateways/PublicWebSiteGateway.Host/Dockerfile
    volumes:
      - public-website-gateway-log:/app/Logs
      - /home/ubuntu/docker-data/ssl/seoul-arm.zhangjin.tk:/app/https:ro
    depends_on:
      - blogging-service
      - product-service
    environment:
      - ElasticSearch__Url=http://elastic:elastic...@elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/privkey.pfx
      - AuthServer__Authority=https://seoul-arm.zhangjin.tk:51511
      - AuthServer__RequireHttpsMetadata=true
      - ConnectionStrings__Default=Server=mariadb;Port=3306;Database=ABPDemo_Identity;Uid=boot;Pwd=boot;
      - Redis__Configuration=redis
      - Routes__0__DownstreamHostAndPorts__0__Host=product-service
      - Routes__0__DownstreamHostAndPorts__0__Port=80
      - Routes__0__DownstreamScheme=http
      - Routes__1__DownstreamHostAndPorts__0__Host=blogging-service
      - Routes__1__DownstreamHostAndPorts__0__Port=80
      - Routes__1__DownstreamScheme=http
      - GlobalConfiguration__BaseUrl=https://seoul-arm.zhangjin.tk:51532
    ports:
      - 51532:443

      
networks:
  default:
    external:
      name: dev-net

volumes:
  auth-server-log:
  backend-admin-app-log:
  public-website-log:
  identity-service-log:
  tenant-management-service-log:
  blogging-service-log:
  product-service-log:
  internal-gateway-log:
  backend-admin-app-gateway-log:
  public-website-gateway-log:  
  

